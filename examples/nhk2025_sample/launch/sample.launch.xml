<!-- ros2 topic pub /control/command_velocity geometry_msgs/msg/TwistStamped "{twist: {linear: {x: 0.0, y: 0.0}, angular: {z: 0.0}}}" -r 100 -->
<launch>
    <!-- コモンコンテナ -->
    <node_container pkg="rclcpp_components" exec="component_container" name="common_container" namespace="/">
        <!-- マップ読み込み -->
        <composable_node pkg="natto_map" plugin="map_loader::map_loader" name="map_loader">
            <param name="line_segments_path" value="$(find-pkg-share nhk2025_sample)/config/map/line_segments.csv"/>
            <param name="circles_path" value="$(find-pkg-share nhk2025_sample)/config/map/circles.csv"/>
            <param name="publish_period_ms" value="1000"/>
        </composable_node>
        <composable_node pkg="natto_map" plugin="map_converter::map_converter" name="map_converter">
            <remap from="map" to="/map"/>
            <remap from="occupancy_grid" to="/occupancy_grid"/>
            <param name="resolution" value="0.05"/>
        </composable_node>
        <composable_node pkg="natto_visualization_converter" plugin="footprint_publisher::footprint_publisher" name="footprint_publisher">
            <remap from="footprint" to="/robot/footprint"/>
        </composable_node>
    </node_container>

    <!-- シミュレーションコンテナー -->
    <node_container pkg="rclcpp_components" exec="component_container" name="simulation_container" namespace="control">
        <!-- 独ステシミュレーター -->
        <composable_node pkg="natto_simple_simulation" plugin="swerve_simulator::swerve_simulator" name="simulator" namespace="swerve">
            <param from="$(find-pkg-share nhk2025_sample)/config/swerve_params.yaml"/>
            <param name="angle_gain_p" value="300.0"/>
            <param name="angle_gain_d" value="100.0"/>
            <param name="speed_gain_p" value="300.0"/>
            <param name="speed_gain_d" value="100.0"/>
            <remap from="swerve_command" to="/swerve/command"/>
            <remap from="swerve_result" to="/swerve/result"/>
            <remap from="simulation_pose" to="/simulation/pose"/>
        </composable_node>

        <!-- LiDARシミュレーター -->
        <composable_node pkg="natto_simple_simulation" plugin="lidar_simulator::lidar_simulator" name="simulator_front" namespace="lidar">
            <param name="position_x" value="+0.4"/>
            <param name="position_y" value="0.0"/>
            <param name="angle" value="0.0"/>
            <param name="frame_id" value="lidar_front"/>
            <remap from="simulation_pose" to="/simulation/pose"/>
            <remap from="map" to="/map"/>
            <remap from="laser_scan" to="/sensing/lidar/laser_scan/front"/>
        </composable_node>
        <composable_node pkg="natto_simple_simulation" plugin="lidar_simulator::lidar_simulator" name="simulator_rear" namespace="lidar">
            <param name="position_x" value="-0.4"/>
            <param name="position_y" value="0.0"/>
            <param name="angle" value="3.1415926"/>
            <param name="frame_id" value="lidar_rear"/>
            <remap from="simulation_pose" to="/simulation/pose"/>
            <remap from="map" to="/map"/>
            <remap from="laser_scan" to="/sensing/lidar/laser_scan/rear"/>
        </composable_node>
    </node_container>

    <node_container pkg="rclcpp_components" exec="component_container" name="sensing_container" namespace="sensing">
        <!-- LiDAR点変換 -->
        <composable_node pkg="natto_lidar_converter" plugin="laserscan_to_pointcloud2::laserscan_to_pointcloud2" name="laserscan_to_pointcloud2_front" namespace="sensing/lidar">
            <param name="frame_id" value="lidar_front"/>
            <remap from="laserscan" to="/sensing/lidar/laser_scan/front"/>
            <remap from="pointcloud2" to="/sensing/lidar/pointcloud2/front"/>
        </composable_node>
        <composable_node pkg="natto_lidar_converter" plugin="laserscan_to_pointcloud2::laserscan_to_pointcloud2" name="laserscan_to_pointcloud2_rear" namespace="sensing/lidar">
            <param name="frame_id" value="lidar_rear"/>
            <remap from="laserscan" to="/sensing/lidar/laser_scan/rear"/>
            <remap from="pointcloud2" to="/sensing/lidar/pointcloud2/rear"/>
        </composable_node>

        <composable_node pkg="natto_lidar_merger" plugin="pointcloud2_merger::pointcloud2_merger" name="pointcloud2_merger" namespace="sensing/lidar">
            <param name="frame_id" value="base_link"/>
            <remap from="pointcloud2_first" to="/sensing/lidar/pointcloud2/front"/>
            <remap from="pointcloud2_second" to="/sensing/lidar/pointcloud2/rear"/>
            <remap from="merged_pointcloud2" to="/sensing/lidar/pointcloud2/merged"/>
            <remap from="footprint" to="/robot/footprint"/>
        </composable_node>
    </node_container>

    <!-- コントロールコンテナ -->
    <node_container pkg="rclcpp_components" exec="component_container" name="control_container" namespace="control">
        <!-- 独ステ目標計算 -->
        <composable_node pkg="natto_swerve_calculator" plugin="swerve_calculator::swerve_calculator" name="calculator" namespace="swerve">
            <param from="$(find-pkg-share nhk2025_sample)/config/swerve_params.yaml"/>
            <remap from="swerve_command" to="/swerve/command"/>
            <remap from="swerve_result" to="/swerve/result"/>
            <!-- <remap from="command_velocity" to="/control/command_velocity"/> -->
            <remap from="command_velocity" to="/control/cmd_vel"/>
        </composable_node>

        <composable_node pkg="natto_astar_planner" plugin="astar_planner::astar_planner" name="astar_planner" namespace="planning">
            <remap from="map" to="/occupancy_grid"/>
            <remap from="goal_pose" to="/goal_pose"/>
            <remap from="current_pose" to="/simulation/pose"/>
            <remap from="path" to="/planning/path"/>
            <remap from="footprint" to="/robot/footprint"/>
            <param name="theta_resolution_deg" value="15"/>
            <param name="xy_inflation" value="0.7"/>
            <param name="grad_alpha" value="1.0"/>
            <param name="grad_beta" value="8.2"/>
            <param name="grad_gamma" value="0.0"/>
        </composable_node>
    </node_container>

    <!-- 表示コンテナ -->
    <node_container pkg="rclcpp_components" exec="component_container" name="visualization_container" namespace="visualization">
        <!-- マップ表示 -->
        <composable_node pkg="natto_visualization_converter" plugin="map_visualizer::map_visualizer" name="map" namespace="visualization">
            <param name="publish_period_ms" value="10"/>
            <remap from="map" to="/map"/>
            <remap from="marker_array" to="/visualization/map"/>
        </composable_node>

        <!-- 独ステ表示 -->
        <composable_node pkg="natto_visualization_converter" plugin="swerve_visualizer::swerve_visualizer" name="command" namespace="visualization/swerve">
            <param name="arrow_r" value="0.0"/>
            <param name="arrow_g" value="0.0"/>
            <param name="arrow_b" value="1.0"/>
            <param name="publish_period_ms" value="10"/>
            <param from="$(find-pkg-share nhk2025_sample)/config/swerve_params.yaml"/>
            <remap from="swerve" to="/swerve/command"/>
            <remap from="marker_array" to="/visualization/swerve/command"/>
        </composable_node>
        <composable_node pkg="natto_visualization_converter" plugin="swerve_visualizer::swerve_visualizer" name="result" namespace="visualization/swerve">
            <param name="publish_period_ms" value="10"/>
            <param name="arrow_r" value="1.0"/>
            <param name="arrow_g" value="0.0"/>
            <param name="arrow_b" value="0.0"/>
            <param from="$(find-pkg-share nhk2025_sample)/config/swerve_params.yaml"/>
            <remap from="swerve" to="/swerve/result"/>
            <remap from="marker_array" to="/visualization/swerve/result"/>
        </composable_node>
    </node_container>

    <!-- RViz2 -->
    <node pkg="rviz2" exec="rviz2" name="rviz2" output="screen"
        args="-d $(find-pkg-share nhk2025_sample)/rviz/sample.rviz --stylesheet $(find-pkg-share nhk2025_sample)/rviz/dark.qss"/>

    <!-- TF -->
    <node pkg="tf2_ros" exec="static_transform_publisher" name="base_link_to_lidar_front" output="screen"
        args="+0.4 0 0 0 0 0 1 base_link lidar_front"/>
    <node pkg="tf2_ros" exec="static_transform_publisher" name="base_link_to_lidar_rear" output="screen"
        args="-0.4 0 0 0 0 1 0 base_link lidar_rear"/>
    
    <!-- 自己位置 -->
    <node pkg="tf2_ros" exec="static_transform_publisher" name="simulation_to_base_link" output="screen"
        args="0 0 0 0 0 0 1 simulation base_link"/>
</launch>